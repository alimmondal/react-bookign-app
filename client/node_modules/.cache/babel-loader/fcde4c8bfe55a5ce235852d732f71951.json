{"ast":null,"code":"// import { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import axios from \"axios\";\n// import React, { useContext, useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { SearchContext } from \"../../context/SearchContext\";\n// import useFetch from \"../../hooks/useFetch\";\n// import \"./reserve.css\";\n// function Reserve({ setOpen, hotelId }) {\n//   const [selectedRooms, setSelectedRooms] = useState([]);\n//   const { data, loading, error } = useFetch(\n//     `http://localhost:8800/api/hotels/room/${hotelId}`\n//   );\n//   console.log(\"data\", data);\n//   const { dates } = useContext(SearchContext);\n//   const getDatesInRange = (startDate, endDate) => {\n//     const start = new Date(startDate);\n//     const end = new Date(endDate);\n//     const date = new Date(start.getTime());\n//     let dates = [];\n//     while (date <= end) {\n//       dates.push(new Date(date).getTime());\n//       date.setDate(date.getDate() + 1);\n//     }\n//     return dates;\n//   };\n//   //   console.log(getDatesInRange(dates[0].startDate, dates[0].endDate));\n//   const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n//   const isAvailable = (roomNumber) => {\n//     const isFound = roomNumber.unavailableDates.some((date) =>\n//       alldates.includes(new Date(date).getTime())\n//     );\n//     return !isFound;\n//   };\n//   const handleSelect = (e) => {\n//     const checked = e.target.checked;\n//     const value = e.target.value;\n//     setSelectedRooms(\n//       checked\n//         ? [...selectedRooms, value]\n//         : selectedRooms.filter((item) => item !== value)\n//     );\n//   };\n//   //   console.log(selectedRooms);\n//   const navigate = useNavigate();\n//   const handleClick = async () => {\n//     try {\n//       await Promise.all(\n//         selectedRooms.map((roomId) => {\n//           const res = axios.put(\n//             `http://localhost:8800/api/rooms/availability/${roomId}`,\n//             {\n//               dates: alldates,\n//             }\n//           );\n//           return res.data;\n//         })\n//       );\n//       setOpen(false);\n//       navigate(\"/\");\n//     } catch (err) {}\n//   };\n//   return (\n//     <div className=\"reserve\">\n//       <div className=\"rContainer\">\n//         <FontAwesomeIcon\n//           icon={faCircleXmark}\n//           className=\"rClose\"\n//           onClick={() => setOpen(false)}\n//         />\n//         <span>Select your rooms:</span>\n//         {data.map((item) => (\n//           <div className=\"rItem\" key={item._id}>\n//             <div className=\"rItemInfo\">\n//               console.log(\"item\", item);\n//               <div className=\"rTitle\">{item.title}</div>\n//               <div className=\"rDesc\">{item.desc}</div>\n//               <div className=\"rMax\">\n//                 Max people: <b>{item.maxPeople}</b>\n//               </div>\n//               <div className=\"rPrice\">{item.price}</div>\n//             </div>\n//             <div className=\"rSelectRooms\">\n//               {item.roomNumbers.map((roomNumber) => (\n//                 <div className=\"room\" key={roomNumber._id}>\n//                   <label>{roomNumber.number}</label>\n//                   <input\n//                     type=\"checkbox\"\n//                     value={roomNumber._id}\n//                     onChange={handleSelect}\n//                     disabled={!isAvailable(roomNumber)}\n//                   />\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         ))}\n//         <button onClick={handleClick} className=\"rButton\">\n//           Reserve Now!\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Reserve;","map":{"version":3,"sources":["D:/react-projects/lama/booking-app/client/src/components/reserve/Reserve.jsx"],"names":[],"mappingssourcesContent":["// import { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import axios from \"axios\";\r\n// import React, { useContext, useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { SearchContext } from \"../../context/SearchContext\";\r\n// import useFetch from \"../../hooks/useFetch\";\r\n// import \"./reserve.css\";\r\n\r\n// function Reserve({ setOpen, hotelId }) {\r\n//   const [selectedRooms, setSelectedRooms] = useState([]);\r\n\r\n//   const { data, loading, error } = useFetch(\r\n//     `http://localhost:8800/api/hotels/room/${hotelId}`\r\n//   );\r\n//   console.log(\"data\", data);\r\n//   const { dates } = useContext(SearchContext);\r\n\r\n//   const getDatesInRange = (startDate, endDate) => {\r\n//     const start = new Date(startDate);\r\n//     const end = new Date(endDate);\r\n\r\n//     const date = new Date(start.getTime());\r\n\r\n//     let dates = [];\r\n//     while (date <= end) {\r\n//       dates.push(new Date(date).getTime());\r\n//       date.setDate(date.getDate() + 1);\r\n//     }\r\n//     return dates;\r\n//   };\r\n//   //   console.log(getDatesInRange(dates[0].startDate, dates[0].endDate));\r\n//   const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n//   const isAvailable = (roomNumber) => {\r\n//     const isFound = roomNumber.unavailableDates.some((date) =>\r\n//       alldates.includes(new Date(date).getTime())\r\n//     );\r\n//     return !isFound;\r\n//   };\r\n\r\n//   const handleSelect = (e) => {\r\n//     const checked = e.target.checked;\r\n//     const value = e.target.value;\r\n//     setSelectedRooms(\r\n//       checked\r\n//         ? [...selectedRooms, value]\r\n//         : selectedRooms.filter((item) => item !== value)\r\n//     );\r\n//   };\r\n\r\n//   //   console.log(selectedRooms);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleClick = async () => {\r\n//     try {\r\n//       await Promise.all(\r\n//         selectedRooms.map((roomId) => {\r\n//           const res = axios.put(\r\n//             `http://localhost:8800/api/rooms/availability/${roomId}`,\r\n//             {\r\n//               dates: alldates,\r\n//             }\r\n//           );\r\n//           return res.data;\r\n//         })\r\n//       );\r\n//       setOpen(false);\r\n//       navigate(\"/\");\r\n//     } catch (err) {}\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"reserve\">\r\n//       <div className=\"rContainer\">\r\n//         <FontAwesomeIcon\r\n//           icon={faCircleXmark}\r\n//           className=\"rClose\"\r\n//           onClick={() => setOpen(false)}\r\n//         />\r\n//         <span>Select your rooms:</span>\r\n//         {data.map((item) => (\r\n//           <div className=\"rItem\" key={item._id}>\r\n//             <div className=\"rItemInfo\">\r\n//               console.log(\"item\", item);\r\n//               <div className=\"rTitle\">{item.title}</div>\r\n//               <div className=\"rDesc\">{item.desc}</div>\r\n//               <div className=\"rMax\">\r\n//                 Max people: <b>{item.maxPeople}</b>\r\n//               </div>\r\n//               <div className=\"rPrice\">{item.price}</div>\r\n//             </div>\r\n//             <div className=\"rSelectRooms\">\r\n//               {item.roomNumbers.map((roomNumber) => (\r\n//                 <div className=\"room\" key={roomNumber._id}>\r\n//                   <label>{roomNumber.number}</label>\r\n//                   <input\r\n//                     type=\"checkbox\"\r\n//                     value={roomNumber._id}\r\n//                     onChange={handleSelect}\r\n//                     disabled={!isAvailable(roomNumber)}\r\n//                   />\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//         <button onClick={handleClick} className=\"rButton\">\r\n//           Reserve Now!\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}